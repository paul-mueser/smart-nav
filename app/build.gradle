plugins {
    id 'com.android.application'
}

import java.nio.file.Files
import java.nio.file.Paths

// Load .env file
def envFile = Paths.get('.env')
def envProps = new Properties()
if (Files.exists(envFile)) {
    envProps.load(Files.newBufferedReader(envFile))
    System.out.println("Loaded .env file")
} else {
    System.out.println("No .env file found")
}

android {
    namespace 'com.paulmueser.smartnav'
    compileSdk 34

    defaultConfig {
        applicationId "com.paulmueser.smartnav"
        minSdk 26
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "CLIENT_ID", "\"${envProps['CLIENT_ID']}\""
        buildConfigField "String", "CLIENT_SECRET", "\"${envProps['CLIENT_SECRET']}\""
    }

    buildFeatures {
        buildConfig true
    }

    signingConfigs {
        release {
            storeFile file("../keystore.jks")
            storePassword System.getenv("RELEASE_KEYSTORE_PASSWORD")
            keyAlias System.getenv("RELEASE_KEYSTORE_ALIAS")
            keyPassword System.getenv("RELEASE_KEY_PASSWORD")
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'com.squareup.okhttp3:okhttp:4.9.3'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}